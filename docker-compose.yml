version: '3.5'
services:
## Backend
  backend:
    build: ./backend
    ports:
      - 28000:28000
    volumes:
      - ./backend:/app
    environment:
      - MOZ_HEADLESS=1
      - DISPLAY=localhost:0.0
    container_name: backend
    depends_on:
      cassandra:
        condition: service_healthy
      chroma:
        condition: service_started
    networks:
      - network

## Frontend
  frontend:
    build: ./frontend
    ports:
      - 8501:8501
    volumes:
      - ./frontend:/app
    container_name: frontend
    depends_on:
      - backend
    networks:
      - network

## Cassandra DB
  cassandra:
    image: docker.io/bitnami/cassandra:latest
    ports:
      - '27000:7000'
      - '29042:9042'
    volumes:
      - './databases/cassandra_db:/bitnami'
    healthcheck:
      test: ["CMD-SHELL", "cqlsh --username=cassandra --password=cassandra --execute='DESCRIBE KEYSPACES;'"]
      interval: 15s
      timeout: 10s
      retries: 10
    environment:
      - CASSANDRA_SEEDS=cassandra
      - CASSANDRA_PASSWORD_SEEDER=yes
      - CASSANDRA_PASSWORD=cassandra
    container_name: cassandra
    restart: on-failure
    networks:
      - network

  ## ChromaDB
  chroma:
    container_name: chromadb
    image: ghcr.io/chroma-core/chroma:0.4.18.dev23
    environment:
      CHROMA_SERVER_AUTH_CREDENTIALS_FILE: "/chroma/server.htpasswd"
      CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER: "chromadb.auth.providers.HtpasswdFileServerAuthCredentialsProvider"
      CHROMA_SERVER_AUTH_PROVIDER: "chromadb.auth.basic.BasicAuthServerProvider"
    volumes:
      - ./databases/chroma_db:/chroma/.chroma/index
      - ./databases/chroma_db/server.htpasswd:/chroma/server.htpasswd
    ports:
      - 8500:8000
    command: 
    networks:
      - network

networks:
  network:
    driver: bridge

## Run with this command to use cache for pip install due to 
## large packages and network connectivity issues
## >>> COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker compose up -d